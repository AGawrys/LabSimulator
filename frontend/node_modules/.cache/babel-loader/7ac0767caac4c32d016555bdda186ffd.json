{"ast":null,"code":"var _jsxFileName = \"/Users/JamesAngeles/iCloud Drive (Archive)/.Trash/cs stuff/CodingProjects/CSE308/LabSimulator/frontend/src/Components/ShakeModal.jsx\";\nimport React from 'react';\nimport '../Styles/popupStyle.css';\nimport { Button, Form, Modal, ProgressBar } from 'react-bootstrap';\nimport Draggable from 'react-draggable';\n\nclass ShakeModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      progress: 0,\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n\n    this.handleDrag = (e, ui) => {\n      const _this$state = this.state,\n            progress = _this$state.progress,\n            position = _this$state.position;\n      const x = position.x,\n            y = position.y;\n      const newProgress = progress + Math.abs(ui.deltaX) + Math.abs(ui.deltaY);\n      this.setState({\n        progress: newProgress,\n        position: {\n          x: x + ui.deltaX,\n          y: y + ui.deltaY\n        }\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          progress = _this$state2.progress,\n          position = _this$state2.position;\n    const _this$props = this.props,\n          progressNeeded = _this$props.progressNeeded,\n          show = _this$props.show,\n          onComplete = _this$props.onComplete;\n    let percentComplete = (progress / progressNeeded).toFixed(0);\n    percentComplete = percentComplete < 100 ? percentComplete : 100;\n    const modalBody = percentComplete === 100 ? React.createElement(SuccessBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : React.createElement(ShakeBody, {\n      handleDrag: this.handleDrag,\n      position: position,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n    return React.createElement(Modal, {\n      show: true,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: 400\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(ProgressBar, {\n      variant: \"success\",\n      animated: true,\n      now: percentComplete,\n      label: \"\".concat(percentComplete, \"%\"),\n      max: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, modalBody), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: onComplete,\n      disabled: percentComplete < 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Continue\")));\n  }\n\n}\n\nfunction ShakeBody(props) {\n  const handleDrag = props.handleDrag,\n        position = props.position;\n  return React.createElement(\"div\", {\n    style: {\n      height: '500px',\n      width: '750px',\n      padding: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Draggable, {\n    bounds: \"parent\",\n    onDrag: handleDrag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"I can be dragged anywhere\"))));\n}\n\nfunction SuccessBody() {\n  return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \" Action successfully completed! \");\n}\n\nexport default ShakeModal;","map":{"version":3,"sources":["/Users/JamesAngeles/iCloud Drive (Archive)/.Trash/cs stuff/CodingProjects/CSE308/LabSimulator/frontend/src/Components/ShakeModal.jsx"],"names":["React","Button","Form","Modal","ProgressBar","Draggable","ShakeModal","Component","state","progress","position","x","y","handleDrag","e","ui","newProgress","Math","abs","deltaX","deltaY","setState","render","props","progressNeeded","show","onComplete","percentComplete","toFixed","modalBody","width","ShakeBody","height","padding","color","SuccessBody"],"mappings":"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","sourcesContent":["import React from 'react';  \nimport '../Styles/popupStyle.css';  \nimport { Button, Form, Modal, ProgressBar } from 'react-bootstrap';\nimport Draggable from 'react-draggable';\n\nclass ShakeModal extends React.Component {\n\n  state = {\n    progress: 0,\n    position: {\n      x: 0, y: 0\n    },\n  };\n\n\n  handleDrag = (e, ui) => {\n    const {progress, position} = this.state;\n    const {x, y} = position;\n    const newProgress = progress + Math.abs(ui.deltaX) + Math.abs(ui.deltaY);\n    this.setState({\n      progress: newProgress,\n      position: {\n        x: x + ui.deltaX,\n        y: y + ui.deltaY,\n      },\n    });\n  };\n\n  render() {\n    const {progress, position} = this.state;\n    const {progressNeeded, show, onComplete} = this.props;\n\n    let percentComplete = (progress / progressNeeded).toFixed(0);\n    percentComplete = percentComplete < 100 ? percentComplete : 100;\n    const modalBody = percentComplete === 100 ? <SuccessBody/> : <ShakeBody handleDrag={this.handleDrag} position={position}/>;\n\n    return (  \n        <Modal\n            show={true}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <div style={{ width: 400 }}>\n                  <ProgressBar\n                    variant=\"success\" \n                    animated \n                    now={percentComplete} \n                    label={`${percentComplete}%`}\n                    max={100}/>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n              {modalBody}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={onComplete} disabled={percentComplete < 100}>\n                Continue\n              </Button>\n            </Modal.Footer>\n        </Modal>\n\n    ); \n  }\n}\n\nfunction ShakeBody(props) {\n  const {handleDrag, position} = props;\n  return (\n      <div style={{height: '500px', width: '750px', padding: '10px'}}>\n        <Draggable bounds=\"parent\" onDrag={handleDrag}>\n          <div className=\"box\">\n            <p style={{color: \"white\"}}>I can be dragged anywhere</p>\n          </div>\n        </Draggable>\n      </div>\n    );\n}\n\nfunction SuccessBody() {\n  return (\n    <h2> Action successfully completed! </h2>\n  );\n}\n\nexport default ShakeModal;"]},"metadata":{},"sourceType":"module"}